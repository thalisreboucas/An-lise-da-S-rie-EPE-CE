---
title: "Análise da Série de Consumo de Energia Elétrica no Ceará"
author: "Thalis Rebouças"
subtitle: "CC0308 - 2025 | Julho 2025 <br><br> Slides:**https://thalisreboucas.github.io/Analise-da-Serie-EPE-CE/#/**"
format: 
  revealjs:
    logo: "images/logo.png"
    width: 1600
    height: 900
    self-contained: false
    incremental: false
    footer: "Slides por Thalis Rebouças, feito em [Quarto](https://quarto.org/docs/presentations/revealjs/index.html). Código disponível [no GitHub](https://github.com/thalisreboucas/Analise-da-Serie-EPE-CE)."
    theme: ["custom.scss"]
    slide-number: c/t
    show-slide-number: all
    hash-type: number
    preview-links: false
---

## Sumário de aprendizagem

::: {style="font-size: 70%;"}
-   Resumo Geral

     1. Motivo da Escolha da Série

     2. Apresentação da Série

     3. Análises Primárias da série e Ajustes
-   Estimação dos Modelos de Série Temporal

     4. Método de Suavização Exponencial
     
     5. Metodologia Box-Jenkins
     
     6. Análise de Intervenções
-   Conclusão
    
    7. Conclusão das análises e modelos
    
    8. Referências

:::

# Vamos lá!

# Motivo da Escolha da Série

## Motivo da  <br> Escolha da Série:

<!--# Descrito por hugo -->
**Por que Análisar ?**

- Identificar padrões e tendências no consumo energético.

- Apoiar políticas públicas para eficiência energética.

- Entender como fatores como o cresimento da população e sazonalidade influenciam o consumo.

# Apresentação da série.

## Apresentação da série:

- É uma série do EPE(Empresa de Pesquisa Energética) do Ministério de Minas e Energia (MME).

- É um dado público disponível desde de 2004 de todos os estados e tipo de consumo [neste link](https://www.epe.gov.br/_layouts/download.aspx?sourceURL=%2Fsites-pt%2Fpublicacoes-dados-abertos%2Fpublicacoes%2FDocuments%2FCONSUMO%2520MENSAL%2520DE%2520ENERGIA%2520EL%25c3%2589TRICA%2520POR%2520CLASSE.xlsx).

Neste caso, vou me restringir a análisar apenas o consumo do Ceará na parte de consumo de energia elétrica na rede (MWh) de Sistema Simples.

- É possivél entender melhor os dados e análises que o governo faz [neste link](https://www.epe.gov.br/pt/publicacoes-dados-abertos/publicacoes/consumo-de-energia-eletrica#:~:text=A%20EPE%20disponibiliza%20o%20arquivo%20com%20a%20s%C3%A9rie,e%20outros%20(rural,%20servi%C3%A7o%20p%C3%BAblico%20e%20ilumina%C3%A7%C3%A3o%20p%C3%BAblica).


## Apresentação da série:

A série começa em janeiro de 2004 e vai até março de 2025,com isso tem cerca de 255 observações,vamos olhar o **gráfico da série:**


```{r}

pacman::p_load(forecast, tseries, ggplot2, patchwork,gridExtra, urca, lubridate, FinTS, zoo,tibble,readxl,datawirzad,tidyverse,timetk)


# 2. CARREGAMENTO E PREPARAÇÃO DOS DADOS
#-----------------------------------------------------------------------
# Carregar o arquivo CSV
file_path <- "C:/Users/thali/Desktop/Área de Trabalho/Serie temporal/Análise de Energia eletrica industrial do Ceará/Slide/Analise-da-Serie-EPE-CE/Bases/CMEIC.xlsx"
dados_completos <- read_excel(file_path)

# Renomear colunas para facilitar o manuseio (assumindo a ordem das colunas)
colnames(dados_completos) <- c("data", "consumo_gwh")

# Filtrar dados para o estado do Ceará (CE)
ceara_data <- dados_completos %>%
  mutate(data = as.Date(data)) %>%
  arrange(data)

# Gráfico da série temporal completa
ggplot(ceara_data, aes(x = data, y = consumo_gwh)) +
  geom_line(color = "#000000", size = 1) +
  labs(title = "Consumo Mensal de Energia Elétrica no Ceará (Sistema Simples) (2004-2025)",
       subtitle = "Fonte: Empresa de Pesquisa Energética (EPE)",
       x = "Ano",
       y = "Consumo (MWh)") +
  theme_minimal()
```
## Apresentação da série:

Fazendo o gráfico box-plot separados por mês,quadrimestre e ano.

```{r}
teste = ceara_data %>%  rename( date = data , value = consumo_gwh)


teste %>%  plot_seasonal_diagnostics(date, value, .interactive = FALSE) 
```
Percebemos um aumento nos últimos meses do ano e valores de outliers em alguns anos.

# Análises Primárias da série e Ajustes

## Análises Primárias da série e Ajustes:

**Fazendo a divisão da série em teste e treino**

Será feita um divisão na série em teste e treino, onde:

- A série de treino vai até o final do ano de 2022

- A série de teste começa do ano de 2023 até março de 2025

Assim sendo um divisão de 27 observações a serem prevista nos teste dos modelos

```{}
# A série começa em Janeiro de 2004
ts_ceara <- ts(ceara_data$consumo_gwh, start = c(2004, 1), frequency = 12)
# 2. Criar o conjunto de TREINO usando a função window()
treino <- window(ts_ceara, end = c(2022, 12))
# 3. Criar o conjunto de TESTE usando a função window()
teste <- window(ts_ceara, start = c(2023, 1), end = c(2025, 3))
```



## Análises Primárias da série e Ajustes:

Podemos decompor a serie para ver a sazonalidade e estacionáridade,

```{r}
# A série começa em Janeiro de 2004
ts_ceara <- ts(ceara_data$consumo_gwh, start = c(2004, 1), frequency = 12)
# 2. Criar o conjunto de TREINO usando a função window()
treino <- window(ts_ceara, end = c(2022, 12))
# 3. Criar o conjunto de TESTE usando a função window()
teste <- window(ts_ceara, start = c(2023, 1), end = c(2025, 3))


# Decomposição da série temporal usando STL (Seasonal and Trend decomposition using Loess)
decomposicao <- stl(ts_ceara, s.window = "periodic")

autoplot(decomposicao, colour = "#0072B2") +
  
  # 1. Adicionar títulos, subtítulos e legendas mais descritivas
  labs(
    title = "Decomposição STL da Série Temporal",
    subtitle = "Componentes: Dados, Tendência, Sazonalidade e Resíduo",
    x = "Ano",
    y = ""  # Deixamos em branco para que os nomes dos painéis sirvam como rótulos
  ) +
  
  # 2. Personalizar os elementos do tema do gráfico
  theme_minimal() +
  theme(
    # Formatação do título principal
    plot.title = element_text(hjust = 0.5, size = 16, face = "bold", color = "gray20"),
    
    # Formatação do subtítulo
    plot.subtitle = element_text(hjust = 0.5, size = 12, color = "gray30"),
    
    # Formatação do título do eixo X
    axis.title.x = element_text(size = 12, face = "italic"),
    
    # Formatação do texto dos painéis (Data, Trend, etc.)
    strip.text = element_text(size = 11, face = "bold", color = "gray10"),
    
    # Ajustar as linhas de grade para um visual mais limpo
    panel.grid.major = element_line(colour = "gray90"),
    panel.grid.minor = element_blank(), # Remover linhas de grade menores
    
    # Adicionar um espaço entre os painéis para melhor separação
    panel.spacing = unit(1.5, "lines") 
  )
```
**Percebe-se um tendência práticamente linear cresente e uma série serrote, vamos olhar os lags para ver se tem tendência.**

## Análises Primárias da série e Ajustes:

Análisando os lags da série:

```{r}

# --- Função Aprimorada ---

#' Gera um painel de diagnóstico para uma série temporal.
#'
#' @param ts_object Um objeto de série temporal (classe ts).
#' @param titulo Um título geral para o painel de gráficos.
#' @return Um objeto de gráfico patchwork contendo os diagnósticos.

gerar_diagnostico_ts <- function(ts_object, titulo = "Painel de Diagnóstico da Série Temporal") {
  
# 2. Gráfico da Função de Autocorrelação (ACF)
  p1 <- ggAcf(ts_object, lag.max = 36) +
    labs(title = "Autocorrelação (ACF)") +
    theme_light()
  
  # 3. Gráfico da Função de Autocorrelação Parcial (PACF)
  p2 <- ggPacf(ts_object, lag.max = 36) +
    labs(title = "Autocorrelação Parcial (PACF)") +
    theme_light()
  
 
  # 5. Organizar os gráficos usando patchwork
  layout <- (p1 | p2) 
  
  # Adicionar um título geral ao painel
  plot_final <- layout + plot_annotation(title = titulo,
                                        theme = theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold")))
  
  return(plot_final)
}



gerar_diagnostico2_ts <- function(ts_object, titulo = "Painel de Diagnóstico da Série Temporal") {
  
# 2. Gráfico da Função de Autocorrelação (ACF)
  p1 <- ggAcf(ts_object, lag.max = 36) +
    labs(title = "Autocorrelação (ACF)") +
    theme_light()
  
  # 3. Gráfico da Função de Autocorrelação Parcial (PACF)
  p2 <- ggPacf(ts_object, lag.max = 36) +
    labs(title = "Autocorrelação Parcial (PACF)") +
    theme_light()
  
  p3 <- autoplot(ts_object) +   geom_line(color = "#000000", size = 1) +  labs(title = "Gráfico da Série",
       x = "Ano",
       y = "Consumo (MWh)") +
    theme_light()
 
  # 5. Organizar os gráficos usando patchwork
  layout <- p3 / (p1 | p2)
  
  # Adicionar um título geral ao painel
  plot_final <- layout + plot_annotation(title = titulo,
                                        theme = theme(plot.title = element_text(hjust = 0.5, size = 16, face = "bold")))
  
  return(plot_final)
}


gerar_diagnostico_ts(ts_ceara)
```
Temos um forte evidência do modelo ser um autoregressivo de ordem 1 ou 2 e que a parte de médias móveis precisa tem um tratamento para aparecer, mesmo que no limte um sazonalidade no lag 12 ~ 14.


## Análises Primárias da série e Ajustes:

Análisando os dados da Série da **primeira diferança**:

```{r}

ts_diff= diff(ts_ceara)

gerar_diagnostico2_ts(ts_diff)

#adf.test(ts_diff)

```
temos uma melhora da série e o teste do Dickey-Fuller deu que a série é estacionaria

## Análises Primárias da série e Ajustes:

Análisando os dados da Série da **primeira diferança normal e uma sazonal**:

```{r}

ts_diff_12 = diff(diff(ts_ceara),12)

gerar_diagnostico2_ts(ts_diff_12 )

#adf.test(ts_diff)

```

# Método de Suavização Exponencial

## Método de Suavização Exponencial

Passo a passo:

- A metodologia de suavização exponencial foi aplicada usando a função ets() do R.

Esta função testa diferentes combinações de componentes de Erro (E), Tendência (T) e Sazonalidade (S), selecionando o modelo que minimiza um critério de informação, como o AIC (Critério de Informação de Akaike). 

O modelo é ajustado apenas com o conjunto de treino, será selecionado apenas o que tiver o melhor AIC definido pela a função do `ETS()` do **R**.


## Método de Suavização Exponencial

Fazendo a utilização da chamada do modelo temos:


```{r}

modelo_ets <- ets(treino)
#summary(modelo_ets) 
#checkresiduals(modelo_ets)

```

```
modelo_ets <- ets(treino)

```

- Que o melhor modelo sugerido foi o ETS(M,Ad,M)

| Componente           | Tipo                | Significado                                                   |
| -------------------- | ------------------- | ------------------------------------------------------------- |
| **Erro (E)**         | M: Multiplicativo   | A variabilidade aumenta com o nível da série                  |
| **Tendência (T)**    | Ad: Aditiva Damping | Tendência aditiva com amortecimento (freia ao longo do tempo) |
| **Sazonalidade (S)** | M: Multiplicativa   | Sazonalidade proporcional ao nível da série                   |

## Método de Suavização Exponencial

- Formula do Modelo:

\begin{align*}
\textbf{Previsão:} \quad
\hat{y}_{t+h} &= (l_t + \phi^h b_t) \cdot s_{t+h-m(k+1)} \\[1em]

\textbf{Atualização do nível:} \quad
l_t &= \alpha \cdot \frac{y_t}{s_{t-m}} + (1 - \alpha)(l_{t-1} + \phi b_{t-1}) \\[1em]

\textbf{Atualização da tendência:} \quad
b_t &= \beta \cdot (l_t - l_{t-1}) + (1 - \beta) \cdot \phi b_{t-1} \\[1em]

\textbf{Atualização da sazonalidade:} \quad
s_t &= \gamma \cdot \frac{y_t}{l_t} + (1 - \gamma) \cdot s_{t-m}
\end{align*}




## Método de Suavização Exponencial


```
summary(modelo_ets)

```
- Modelo selecionado pelo melhor AIC

* **Alpha (nível):** $\alpha = 0,7001$
* **Beta (tendência):** $\beta = 0,0038$
* **Gamma (sazonalidade):** $\gamma = 0,0001$
* **Damping:** $\phi = 0,9787$
* **Nível inicial:** $l_0 = 506720,43$
* **Tendência inicial:** $b_0 = 3288,48$
* **Desvio Padrão dos erros:** $0,0313$
* **AIC:** $5878,418$

**Sazonalidade inicial:** $s_1 = 1,033, \ldots, s_{12} = 1,0149$


## Método de Suavização Exponencial

**Métricas de desempenho no conjunto de treino:**
* RMSE: 26.608,53
* MAE: 19.550,13
* MAPE: 2,29% ⇒ Erro percentual muito baixo
* ACF dos resíduos: 0,066 ⇒ Baixa autocorrelação


## Método de Suavização Exponencial

- Formula do modelo

\begin{align*}
\hat{y}_{t+h} &= \left( 506720{,}43 + 0{,}9787^h \cdot 3288{,}48 \right) \cdot s_{t+h-12(k+1)} \\
l_t &= 0{,}7001 \cdot \frac{y_t}{s_{t-12}} + (1 - 0{,}7001)(l_{t-1} + 0{,}9787 \cdot b_{t-1}) \\
b_t &= 0{,}0038 \cdot (l_t - l_{t-1}) + (1 - 0{,}0038) \cdot 0{,}9787 \cdot b_{t-1} \\
s_t &= 0{,}0001 \cdot \frac{y_t}{l_t} + (1 - 0{,}0001) \cdot s_{t-12}
\end{align*}


## Método de Suavização Exponencial



```{r}
gerar_diagnostico2_ts(modelo_ets$residuals) 
```

* Modelo meio ajustado
* Captura tendência suavizada e sazonalidade proporcional fraca
* Resíduos sem padrão aparente

## Método de Suavização Exponencial

```{r}

# Realizar a previsão para os próximos 27 meses 
previsao_ets <- forecast(modelo_ets, h = 27)

# Gráfico da previsão vs. dados de teste 
autoplot(previsao_ets) +
  autolayer(teste, series="Dados Reais") +
  labs(title='Gráfico 2: Previsão com ETS(M,Ad,M) vs. Dados de Teste', 
       x='Ano', y='Índice',
       caption = 'Linha azul: Previsão ETS. Sombreado: Intervalos de Confiança.') +
  theme_minimal()
```

## Método de Suavização Exponencial

- Acurácia do Modelo ETS no Conjunto de Teste

```
print(acuracia_ets)
```

```{r}
# Obter as medidas de ajuste no conjunto de teste 
acuracia_ets <- accuracy(previsao_ets, teste)
print(acuracia_ets)


```

O modelo apresenta um desempenho ruim no conjunto de teste. Embora tenha se ajustado razoavelmente bem aos dados de treinamento, ele não conseguiu generalizar essa performance para os dados futuros (o conjunto de teste).




# Metodologia Box-Jenkins
     
```
# --- TÓPICO 4: METODOLOGIA DE BOX-JENKINS (ARIMA)  ---

# 4.1. Análise de Estacionariedade no Treino [cite: 23]
# Teste Augmented Dickey-Fuller (ADF)
# H0: a série não é estacionária (possui raiz unitária)
summary(ur.df(serie_treino, type = "trend", lags = 12)) # p-valor alto, não rejeita H0

# Teste Kwiatkowski-Phillips-Schmidt-Shin (KPSS)
# H0: a série é estacionária
summary(ur.kpss(serie_treino, type = "tau")) # Estatística de teste > valor crítico, rejeita H0
# Conclusão: a série não é estacionária.

# 4.2. Diferenciação para obter estacionariedade [cite: 23]
# Aplicar uma diferença sazonal (d=1, D=1)
serie_diff <- diff(diff(serie_treino, lag = 12), lag = 1)

# Verificar estacionariedade da série diferenciada
summary(ur.df(serie_diff, type = "drift", lags = 12)) # p-valor baixo, rejeita H0. OK!
summary(ur.kpss(serie_diff, type = "mu")) # Estatística < valor crítico. OK!
# Conclusão: a série diferenciada é estacionária.

# 4.3. Análise dos gráficos ACF e PACF 
ggtsdisplay(serie_diff, main="ACF/PACF da Série Diferenciada (d=1, D=1)")

# 4.4. Estimação do Modelo 

# Modelo 1: Usando auto.arima() como baseline
modelo_auto_arima <- auto.arima(serie_treino, stepwise = FALSE, approximation = FALSE)
summary(modelo_auto_arima) # Sugeriu ARIMA(2,1,1)(0,1,1)[12]

# Diagnóstico do modelo auto.arima
checkresiduals(modelo_auto_arima) # Ljung-Box p-value é baixo (0.01213), resíduos não são ruído branco.

# Modelo 2: Tentativa manual baseada no ACF/PACF e experimentação
# O ACF/PACF sugere componentes sazonais mais complexos.
# Vamos testar SARIMA(0,1,1)(2,1,1)[12]
modelo_final_arima <- Arima(serie_treino, order=c(0,1,1), seasonal=c(2,1,1))
summary(modelo_final_arima)

# Diagnóstico do modelo final
checkresiduals(modelo_final_arima) # Ljung-Box p-value = 0.1384. Resíduos são ruído branco!
# Este é o nosso modelo final.

# 4.5. Previsão com o modelo final
previsao_arima <- forecast(modelo_final_arima, h = 24)

# Gráfico da previsão ARIMA vs. dados de teste
autoplot(previsao_arima) +
  autolayer(serie_teste, series="Dados Reais") +
  labs(title='Gráfico 3: Previsão com SARIMA(0,1,1)(2,1,1)₁₂ vs. Dados de Teste',
       x='Ano', y='Índice',
       caption = 'Linha azul: Previsão ARIMA. Sombreado: Intervalos de Confiança.') +
  theme_minimal()

# Obter as medidas de ajuste no conjunto de teste
acuracia_arima <- accuracy(previsao_arima, serie_teste)
cat("\n--- Acurácia do Modelo ARIMA Final no Conjunto de Teste ---\n")
print(acuracia_arima)


# --- TÓPICO 5: COMPARAÇÃO DOS MODELOS  ---

cat("\n\n--- Comparação Final dos Modelos (Métricas no Conjunto de Teste) ---\n")
print("Modelo ETS(M,A,M):")
print(acuracia_ets[2, c("RMSE", "MAE", "MAPE")]) # Linha 2 é do conjunto de teste
print("Modelo SARIMA(0,1,1)(2,1,1)[12]:")
print(acuracia_arima[2, c("RMSE", "MAE", "MAPE")])

```
     


# Análise de Intervenções

    
# Conclusão das análises e modelos


# Referências

- Chapman, Sampling Design and Analysis (Chapman  HallCRC Texts in Statistical Science), 3rd Edition.


# Obrigado !! 

## Frase Final:




“Não podemos prever o futuro, mas podemos criá-lo.”

Peter Drucker
